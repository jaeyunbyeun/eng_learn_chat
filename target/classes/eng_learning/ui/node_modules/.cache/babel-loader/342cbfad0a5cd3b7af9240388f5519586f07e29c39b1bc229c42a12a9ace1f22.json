{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaeyun\\\\eng_learn_chat\\\\eng_learning\\\\ui\\\\src\\\\pages\\\\Test.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Test.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nexport default function Test() {\n  _s();\n  const [score, setScore] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userText, setUserText] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const navigate = useNavigate();\n  const questions = [{\n    type: 'choice',\n    question: 'What is the meaning of \"improve\"?',\n    options: ['Make better', 'Make worse', 'Stay the same'],\n    answer: 'Make better'\n  }, {\n    type: 'choice',\n    question: 'What is the opposite of \"happy\"?',\n    options: ['Sad', 'Excited', 'Joyful'],\n    answer: 'Sad'\n  }, {\n    type: 'choice',\n    question: 'Which word means \"conversation\"?',\n    options: ['Talk', 'Walk', 'Run'],\n    answer: 'Talk'\n  }, {\n    type: 'speech',\n    question: 'Say the word \"apple\"',\n    answer: 'apple'\n  }, {\n    type: 'speech',\n    question: 'Say the word \"banana\"',\n    answer: 'banana'\n  }];\n  const current = questions[currentQuestion];\n  const handleAnswer = selectedOption => {\n    if (selectedOption === current.answer) {\n      setScore(score + 1);\n    }\n    goNext();\n  };\n  const goNext = () => {\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n      setUserText('');\n    } else {\n      alert(`Test completed! Your score is: ${score}`);\n      navigate('/'); // ÌÖåÏä§Ìä∏ ÏôÑÎ£å ÌõÑ ÌôàÏúºÎ°ú Ïù¥Îèô\n    }\n  };\n  const startRecording = () => {\n    setIsRecording(true);\n    recognition.start();\n  };\n  const stopRecording = () => {\n    setIsRecording(false);\n    recognition.stop();\n  };\n  recognition.onresult = event => {\n    const speechToText = event.results[0][0].transcript;\n    setUserText(speechToText);\n    if (speechToText.toLowerCase() === current.answer.toLowerCase()) {\n      setScore(score + 1);\n    }\n    goNext();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate('/home'),\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCDD Test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), current.type === 'choice' && current.options && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: current.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: current.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(option),\n            className: \"option-btn\",\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), current.type === 'speech' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"speech-test\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: current.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRecording,\n          disabled: isRecording,\n          className: \"record-btn\",\n          children: isRecording ? 'Recording...' : 'Start Recording'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: stopRecording,\n          disabled: !isRecording,\n          className: \"stop-btn\",\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Recognized Speech: \", userText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n_s(Test, \"fHBBRI39cr3We8jUZ8pEq4jsd0Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SpeechRecognition","window","webkitSpeechRecognition","recognition","Test","_s","score","setScore","currentQuestion","setCurrentQuestion","userText","setUserText","isRecording","setIsRecording","navigate","questions","type","question","options","answer","current","handleAnswer","selectedOption","goNext","length","alert","startRecording","start","stopRecording","stop","onresult","event","speechToText","results","transcript","toLowerCase","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","disabled","_c","$RefreshReg$"],"sources":["C:/Users/jaeyun/eng_learn_chat/eng_learning/ui/src/pages/Test.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Test.css';\r\n\r\nconst SpeechRecognition = (window.SpeechRecognition || window.webkitSpeechRecognition) as any;\r\nconst recognition = new SpeechRecognition();\r\n\r\nexport default function Test() {\r\n  const [score, setScore] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [userText, setUserText] = useState('');\r\n  const [isRecording, setIsRecording] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const questions = [\r\n    {\r\n      type: 'choice',\r\n      question: 'What is the meaning of \"improve\"?',\r\n      options: ['Make better', 'Make worse', 'Stay the same'],\r\n      answer: 'Make better',\r\n    },\r\n    {\r\n      type: 'choice',\r\n      question: 'What is the opposite of \"happy\"?',\r\n      options: ['Sad', 'Excited', 'Joyful'],\r\n      answer: 'Sad',\r\n    },\r\n    {\r\n      type: 'choice',\r\n      question: 'Which word means \"conversation\"?',\r\n      options: ['Talk', 'Walk', 'Run'],\r\n      answer: 'Talk',\r\n    },\r\n    {\r\n      type: 'speech',\r\n      question: 'Say the word \"apple\"',\r\n      answer: 'apple',\r\n    },\r\n    {\r\n      type: 'speech',\r\n      question: 'Say the word \"banana\"',\r\n      answer: 'banana',\r\n    },\r\n  ];\r\n\r\n  const current = questions[currentQuestion];\r\n\r\n  const handleAnswer = (selectedOption: string) => {\r\n    if (selectedOption === current.answer) {\r\n      setScore(score + 1);\r\n    }\r\n    goNext();\r\n  };\r\n\r\n  const goNext = () => {\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setUserText('');\r\n    } else {\r\n      alert(`Test completed! Your score is: ${score}`);\r\n      navigate('/'); // ÌÖåÏä§Ìä∏ ÏôÑÎ£å ÌõÑ ÌôàÏúºÎ°ú Ïù¥Îèô\r\n    }\r\n  };\r\n\r\n  const startRecording = () => {\r\n    setIsRecording(true);\r\n    recognition.start();\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    setIsRecording(false);\r\n    recognition.stop();\r\n  };\r\n\r\n  recognition.onresult = (event: any) => {\r\n    const speechToText = event.results[0][0].transcript;\r\n    setUserText(speechToText);\r\n    if (speechToText.toLowerCase() === current.answer.toLowerCase()) {\r\n      setScore(score + 1);\r\n    }\r\n    goNext();\r\n  };\r\n\r\n  return (\r\n      <div className=\"test-container\">\r\n        <div className=\"test-card\">\r\n          <div className=\"test-header\">\r\n            <button className=\"back-button\" onClick={() => navigate('/home')}>\r\n              &lt;\r\n            </button>\r\n            <h2>üìù Test</h2>\r\n          </div>\r\n\r\n          {current.type === 'choice' && current.options &&(\r\n              <>\r\n                <h3>{current.question}</h3>\r\n                <div className=\"options\">\r\n                  {current.options.map((option, index) => (\r\n                      <button key={index} onClick={() => handleAnswer(option)} className=\"option-btn\">\r\n                        {option}\r\n                      </button>\r\n                  ))}\r\n                </div>\r\n              </>\r\n          )}\r\n\r\n          {current.type === 'speech' && (\r\n              <div className=\"speech-test\">\r\n                <h3>{current.question}</h3>\r\n                <button onClick={startRecording} disabled={isRecording} className=\"record-btn\">\r\n                  {isRecording ? 'Recording...' : 'Start Recording'}\r\n                </button>\r\n                <button onClick={stopRecording} disabled={!isRecording} className=\"stop-btn\">\r\n                  Stop Recording\r\n                </button>\r\n                <p>Recognized Speech: {userText}</p>\r\n              </div>\r\n          )}\r\n\r\n          <div className=\"score\">\r\n            <p>Current Score: {score}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    SpeechRecognition: any;\r\n    webkitSpeechRecognition: any;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}