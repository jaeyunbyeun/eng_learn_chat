{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaeyun\\\\eng_learn_chat\\\\eng_learning\\\\ui\\\\src\\\\pages\\\\Vocab.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Vocab.css'; // ‚úÖ CSS Ï∂îÍ∞Ä\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Vocab() {\n  _s();\n  const [words, setWords] = useState([{\n    word: 'improve',\n    meaning: 'to make better',\n    example: 'I want to improve my English.'\n  }, {\n    word: 'conversation',\n    meaning: 'talking with someone',\n    example: 'We had a nice conversation at lunch.'\n  }, {\n    word: 'conversation',\n    meaning: 'talking with someone',\n    example: 'We had a nice conversation at lunch.'\n  }, {\n    word: 'conversation',\n    meaning: 'talking with someone',\n    example: 'We had a nice conversation at lunch.'\n  }, {\n    word: 'conversation',\n    meaning: 'talking with someone',\n    example: 'We had a nice conversation at lunch.'\n  }, {\n    word: 'conversation',\n    meaning: 'talking with someone',\n    example: 'We had a nice conversation at lunch.'\n  }, {\n    word: 'conversation',\n    meaning: 'talking with someone',\n    example: 'We had a nice conversation at lunch.'\n  }]);\n  const navigate = useNavigate();\n\n  // ‚úÖ Ï≤¥ÌÅ¨Î∞ïÏä§ ÏÉÅÌÉú ÌÜ†Í∏Ä\n  const toggleKnown = index => {\n    const updatedWords = [...words];\n    updatedWords[index].known = !updatedWords[index].known;\n    setWords(updatedWords);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocab-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vocab-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vocab-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-button\",\n          onClick: () => navigate('/home'),\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCDA \\uB2E8\\uC5B4\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), words.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC800\\uC7A5\\uB41C \\uB2E8\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"vocab-list\",\n        children: words.map((w, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `vocab-item ${w.known ? 'known' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vocab-top-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: w.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: w.known || false,\n                onChange: () => toggleKnown(i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkbox-label\",\n                children: \"\\uC544\\uB294 \\uB2E8\\uC5B4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCD6 \\uB73B: \", w.meaning]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u270F\\uFE0F \\uC608\\uBB38: \", w.example]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Vocab, \"RR6/zBeZR4brct0FTHtsJgJaET8=\", false, function () {\n  return [useNavigate];\n});\n_c = Vocab;\nvar _c;\n$RefreshReg$(_c, \"Vocab\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Vocab","_s","words","setWords","word","meaning","example","navigate","toggleKnown","index","updatedWords","known","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","w","i","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/jaeyun/eng_learn_chat/eng_learning/ui/src/pages/Vocab.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Vocab.css'; // ‚úÖ CSS Ï∂îÍ∞Ä\r\n\r\ntype VocabWord = {\r\n  word: string;\r\n  meaning: string;\r\n  example: string;\r\n  known?: boolean; // ‚úÖ Ï≤¥ÌÅ¨ Ïó¨Î∂Ä Ï∂îÍ∞Ä\r\n};\r\n\r\nexport default function Vocab() {\r\n  const [words, setWords] = useState<VocabWord[]>([\r\n    {\r\n      word: 'improve',\r\n      meaning: 'to make better',\r\n      example: 'I want to improve my English.',\r\n    },\r\n    {\r\n      word: 'conversation',\r\n      meaning: 'talking with someone',\r\n      example: 'We had a nice conversation at lunch.',\r\n    },\r\n    {\r\n      word: 'conversation',\r\n      meaning: 'talking with someone',\r\n      example: 'We had a nice conversation at lunch.',\r\n    },\r\n    {\r\n      word: 'conversation',\r\n      meaning: 'talking with someone',\r\n      example: 'We had a nice conversation at lunch.',\r\n    },\r\n    {\r\n      word: 'conversation',\r\n      meaning: 'talking with someone',\r\n      example: 'We had a nice conversation at lunch.',\r\n    },\r\n    {\r\n      word: 'conversation',\r\n      meaning: 'talking with someone',\r\n      example: 'We had a nice conversation at lunch.',\r\n    },\r\n    {\r\n      word: 'conversation',\r\n      meaning: 'talking with someone',\r\n      example: 'We had a nice conversation at lunch.',\r\n    },\r\n  ]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n   // ‚úÖ Ï≤¥ÌÅ¨Î∞ïÏä§ ÏÉÅÌÉú ÌÜ†Í∏Ä\r\n  const toggleKnown = (index: number) => {\r\n    const updatedWords = [...words];\r\n    updatedWords[index].known = !updatedWords[index].known;\r\n    setWords(updatedWords);\r\n  };\r\n\r\n   return (\r\n    <div className=\"vocab-container\">\r\n      <div className=\"vocab-box\">\r\n        <div className=\"vocab-header\">\r\n          <button className=\"back-button\" onClick={() => navigate('/home')}>\r\n            &lt;\r\n          </button>\r\n          <h2>üìö Îã®Ïñ¥Ïû•</h2>\r\n        </div>\r\n\r\n        {words.length === 0 ? (\r\n          <p>Ï†ÄÏû•Îêú Îã®Ïñ¥Í∞Ä ÏóÜÏäµÎãàÎã§.</p>\r\n        ) : (\r\n          <ul className=\"vocab-list\">\r\n            {words.map((w, i) => (\r\n              <li key={i} className={`vocab-item ${w.known ? 'known' : ''}`}>\r\n                <div className=\"vocab-top-row\">\r\n                  <h3>{w.word}</h3>\r\n                  <label>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={w.known || false}\r\n                      onChange={() => toggleKnown(i)}\r\n                    />\r\n                    <span className=\"checkbox-label\">ÏïÑÎäî Îã®Ïñ¥</span>\r\n                  </label>\r\n                </div>\r\n                <p>üìñ Îúª: {w.meaning}</p>\r\n                <p>‚úèÔ∏è ÏòàÎ¨∏: {w.example}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}