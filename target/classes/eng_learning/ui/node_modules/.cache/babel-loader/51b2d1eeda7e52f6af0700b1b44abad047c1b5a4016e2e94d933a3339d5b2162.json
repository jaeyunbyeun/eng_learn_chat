{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaeyun\\\\eng_learn_chat\\\\eng_learning\\\\ui\\\\src\\\\pages\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [isTopicSelected, setIsTopicSelected] = useState(false);\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const navigate = useNavigate();\n  const endRef = useRef(null);\n  const scrollToBottom = () => {\n    var _endRef$current;\n    return (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const addMessage = (role, content) => {\n    setMessages(prev => [...prev, {\n      id: `${Date.now()}-${Math.random()}`,\n      role,\n      content\n    }]);\n  };\n  const handleTopicSelect = topic => {\n    setSelectedTopic(topic);\n    setIsTopicSelected(true);\n    // 안내 메시지는 AI가 말한 걸로 처리(왼쪽)\n    addMessage('ai', `Let's start the roleplay about \"${topic}\". You can type your first line!`);\n  };\n  const handleSend = () => {\n    const text = input.trim();\n    if (!text) return;\n\n    // 내 메시지(오른쪽)\n    addMessage('user', text);\n    setInput('');\n\n    // (옵션) 임시 AI 응답 데모 — 실제 API 연동 시 이 부분을 대체하세요.\n    setTimeout(() => {\n      addMessage('ai', `AI: \"${text}\" 에 대한 응답 예시입니다.`);\n    }, 400);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleExit = () => {\n    setIsTopicSelected(false);\n    setSelectedTopic('');\n    setMessages([]);\n    setInput('');\n    navigate('/feedback');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [isTopicSelected && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-button\",\n        onClick: handleExit,\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: isTopicSelected ? `💬 롤플레이 주제: ${selectedTopic}` : '💬 롤플레이 주제 선택'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !isTopicSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topic-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC5B4\\uB5A4 \\uB864\\uD50C\\uB808\\uC774\\uB97C \\uD560\\uAE4C\\uC694?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTopicSelect('병원에서 의사와 환자'),\n          children: \"\\uD83C\\uDFE5 \\uBCD1\\uC6D0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTopicSelect('레스토랑에서 주문하기'),\n          children: \"\\uD83C\\uDF7D\\uFE0F \\uB808\\uC2A4\\uD1A0\\uB791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTopicSelect('공항에서 체크인하기'),\n          children: \"\\u2708\\uFE0F \\uACF5\\uD56D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTopicSelect('호텔에서 체크인하기'),\n          children: \"\\uD83C\\uDFE8 \\uD638\\uD154\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), isTopicSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: [messages.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-row ${m.role}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-bubble ${m.role}`,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: m.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, m.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: endRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chat-input\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyDown: handleKeyDown,\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"send-button\",\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"krWS8bt+ByZYUcVuYmH3d2ajtBc=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","useRef","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","isTopicSelected","setIsTopicSelected","selectedTopic","setSelectedTopic","messages","setMessages","input","setInput","navigate","endRef","scrollToBottom","_endRef$current","current","scrollIntoView","behavior","addMessage","role","content","prev","id","Date","now","Math","random","handleTopicSelect","topic","handleSend","text","trim","setTimeout","handleKeyDown","e","key","preventDefault","handleExit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","m","ref","value","onChange","target","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/jaeyun/eng_learn_chat/eng_learning/ui/src/pages/Chat.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Chat.css';\r\n\r\ntype Message = {\r\n  id: string;\r\n  role: 'ai' | 'user';\r\n  content: string;\r\n};\r\n\r\nexport default function Chat() {\r\n  const [isTopicSelected, setIsTopicSelected] = useState(false);\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [input, setInput] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const endRef = useRef<HTMLDivElement | null>(null);\r\n  const scrollToBottom = () => endRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const addMessage = (role: 'ai' | 'user', content: string) => {\r\n    setMessages((prev) => [\r\n      ...prev,\r\n      { id: `${Date.now()}-${Math.random()}`, role, content },\r\n    ]);\r\n  };\r\n\r\n  const handleTopicSelect = (topic: string) => {\r\n    setSelectedTopic(topic);\r\n    setIsTopicSelected(true);\r\n    // 안내 메시지는 AI가 말한 걸로 처리(왼쪽)\r\n    addMessage('ai', `Let's start the roleplay about \"${topic}\". You can type your first line!`);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    const text = input.trim();\r\n    if (!text) return;\r\n\r\n    // 내 메시지(오른쪽)\r\n    addMessage('user', text);\r\n    setInput('');\r\n\r\n    // (옵션) 임시 AI 응답 데모 — 실제 API 연동 시 이 부분을 대체하세요.\r\n    setTimeout(() => {\r\n      addMessage('ai', `AI: \"${text}\" 에 대한 응답 예시입니다.`);\r\n    }, 400);\r\n  };\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleExit = () => {\r\n    setIsTopicSelected(false);\r\n    setSelectedTopic('');\r\n    setMessages([]);\r\n    setInput('');\r\n    navigate('/feedback');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-box\">\r\n        {isTopicSelected && (\r\n          <button className=\"exit-button\" onClick={handleExit}>\r\n            ❌\r\n          </button>\r\n        )}\r\n\r\n        <div className=\"chat-header\">\r\n          {isTopicSelected ? `💬 롤플레이 주제: ${selectedTopic}` : '💬 롤플레이 주제 선택'}\r\n        </div>\r\n\r\n        {!isTopicSelected && (\r\n          <div className=\"topic-selection\">\r\n            <p>어떤 롤플레이를 할까요?</p>\r\n            <button onClick={() => handleTopicSelect('병원에서 의사와 환자')}>🏥 병원</button>\r\n            <button onClick={() => handleTopicSelect('레스토랑에서 주문하기')}>🍽️ 레스토랑</button>\r\n            <button onClick={() => handleTopicSelect('공항에서 체크인하기')}>✈️ 공항</button>\r\n            <button onClick={() => handleTopicSelect('호텔에서 체크인하기')}>🏨 호텔</button>\r\n          </div>\r\n        )}\r\n\r\n        {isTopicSelected && (\r\n          <>\r\n            <div className=\"chat-messages\">\r\n              {messages.map((m) => (\r\n                <div key={m.id} className={`message-row ${m.role}`}>\r\n                  <div className={`message-bubble ${m.role}`}>\r\n                    <span>{m.content}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div ref={endRef} />\r\n            </div>\r\n\r\n            <div className=\"chat-input-area\">\r\n              <input\r\n                className=\"chat-input\"\r\n                value={input}\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onKeyDown={handleKeyDown}\r\n                placeholder=\"Type your message...\"\r\n              />\r\n              <button className=\"send-button\" onClick={handleSend}>\r\n                Send\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}